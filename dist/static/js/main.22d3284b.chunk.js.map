{"version":3,"sources":["components/layout/SignedInLinks.js","store/reducers/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/LogIn.js","components/auth/Register.js","components/projects/CreateProject.js","store/reducers/actions/projectAction.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","logOut","getState","firebase","auth","signOut","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","links","uid","isLoaded","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","LogIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","logIn","authError","onSubmit","htmlFor","onChange","credentials","a","async","signInWithEmailAndPassword","catch","err","Register","firstName","lastName","register","newUser","getFirestore","createUserWithEmailAndPassword","response","doc","set","CreateProject","createProject","history","push","getFirebase","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.22d3284b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { logOut } from '../../store/reducers/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a onClick={props.logOut}>Log out</a></li>\r\n            <li><NavLink to='/' className='bnt btn-floating pink lighten-1'>{ props.profile.initials }</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logOut: () => dispatch(logOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","import firebase from 'firebase'\r\n\r\nexport const logIn = (credentials) => {\r\n    return async (dispatch, getState) => {\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            console.log(\"Login Successful\")\r\n            dispatch({ type: 'LOGIN_SUCCESS'})\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            dispatch({ type: 'LOGIN_ERROR', err})\r\n        })\r\n    };\r\n}\r\n\r\nexport const logOut = () => {\r\n    return (dispatch, getState) => {        \r\n        firebase.auth().signOut().then( () => {\r\n            dispatch({ type: 'LOGOUT_SUCCESS' })\r\n        })\r\n    }\r\n}\r\n\r\nexport const register = (newUser) => {\r\n    return (dispatch, getState, {getFirestore}) => {\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((response) => {\r\n            return firestore.collection('users').doc(response.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type:'REGISTER_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type:'REGISTER_ERROR', err })\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/register'>Register</NavLink></li>\r\n            <li><NavLink to='/login'>Log in</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks/>;\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">Task Planner</Link>\r\n                { auth.isLoaded && links }\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n        <div className=\"sectioN\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                       { notifications && notifications.map(item => {\r\n                           return (\r\n                               <li key={item.id}>\r\n                                   <span className=\"pink-text\">{item.user} </span>\r\n                                   <span>{item.content}</span>\r\n                                   <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                   </div>\r\n                               </li>\r\n                           )\r\n                       }) }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                    <p className=\"grey-text\">{ moment(project.createdAt.toDate()).calendar() }</p>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            { projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id}  key={project.id}>\r\n                        <ProjectSummary project={project}/>\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React, { Component } from 'react'\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render(){\r\n        const { projects, auth, notifications } = this.props;\r\n\r\n        if(!auth.uid) return <Redirect to='/login' />\r\n        \r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state => {\r\n    console.log(state);\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n    if(!auth.uid) return <Redirect to='/login' />\r\n\r\n    if(project){\r\n        return(\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{ project.title }</span>\r\n                        <p>{ project.content }</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by { project.authorFirstName } {project.authorLastName}</div>\r\n                        <div>{ moment(project.createdAt.toDate()).calendar() }</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else { \r\n    return ( \r\n        <div className=\"container center\">\r\n            <p>Loading project...</p>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    return{\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { logIn } from '../../store/reducers/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass LogIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.logIn(this.state);\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n\r\n        if(auth.uid) return <Redirect to='/'/>\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darker-3\">Login</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                        { authError ? (<p>{ authError }</p>) : (null) }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logIn: (credentials) => dispatch(logIn(credentials))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { register } from '../../store/reducers/actions/authActions'\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.register(this.state);\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n\r\n        if(auth.uid) return <Redirect to='/'/>\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darker-3\">Register</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Register</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{ authError }</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        register: (newUser) => dispatch(register(newUser))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/reducers/actions/projectAction'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n\r\n        if(!auth.uid) return <Redirect to='/login' />\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darker-3\">Create a Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //make async call\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName : profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n        })\r\n        \r\n    }\r\n};","import React from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport ProjectDetails from './components/projects/ProjectDetails';\r\nimport LogIn from './components/auth/LogIn';\r\nimport Register from './components/auth/Register';\r\nimport CreateProject from './components/projects/CreateProject';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Navbar/>\r\n        <Switch>\r\n          <Route exact path='/' component={Dashboard} />\r\n          <Route path='/project/:id' component={ProjectDetails} />\r\n          <Route path='/login' component={LogIn} />\r\n          <Route path='/register' component={Register} />\r\n          <Route path='/create' component={CreateProject} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'LOGIN_ERROR' :\r\n            console.log(\"LOGIN ERROR .....\");\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS' :\r\n            console.log(' login successful');\r\n            return {\r\n                ...state,\r\n                authError : null\r\n            }\r\n        case 'LOGOUT_SUCCESS' :\r\n            console.log(\"logout completed\");\r\n            return {\r\n                state\r\n            }\r\n        case 'REGISTER_SUCCES' :\r\n            console.log(\"register successful\");\r\n            return{\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'REGISTER_ERROR' :\r\n            console.log(\"register failed\")\r\n            return{\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","\r\nconst initState = {\r\n    projects: [\r\n        {id: '1', title: 'collect apples with me', content: 'badum tsss'},\r\n        {id: '2', title: 'collect videogames on sale', content: 'Making profit - yeah!'},\r\n        {id: '3', title: 'build a jetpack', content: 'Easier than it sounds'},\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT' :\r\n            console.log(\"created a new project\", action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR' :\r\n            console.log('create project error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBkOnln_-iF-stGnbgkQ5LKekJ4bTtoxYQ\",\r\n    authDomain: \"taskplanner-kalaone.firebaseapp.com\",\r\n    databaseURL: \"https://taskplanner-kalaone.firebaseio.com\",\r\n    projectId: \"taskplanner-kalaone\",\r\n    storageBucket: \"taskplanner-kalaone.appspot.com\",\r\n    messagingSenderId: \"175375793047\",\r\n    appId: \"1:175375793047:web:1b974d451acac7357f22d2\",\r\n    measurementId: \"G-X0DMP3N1B3\"\r\n  };\r\n  // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true});\r\n\r\nexport default firebase;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport rootReducer from './store/reducers/rootReducer'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore'\r\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\r\nimport firebase from 'firebase/app'\r\nimport fbConfig from './config/fbConfig'\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\r\n    reduxFirestore(firebase, fbConfig)\r\n    )\r\n);\r\n\r\nconst rrfConfig = {\r\n    userProfile: \"users\",\r\n    useFirestoreForProfile: true,\r\n    attachAuthIsReady: true\r\n};\r\n\r\nconst rrfProps = {\r\n    firebase,\r\n    config: rrfConfig,\r\n    dispatch: store.dispatch,\r\n    createFirestoreInstance\r\n  };\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ReactReduxFirebaseProvider {...rrfProps}>\r\n            <App />\r\n        </ReactReduxFirebaseProvider>\r\n    </Provider>,\r\n    document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}